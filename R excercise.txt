1.Write a R program to take input from the user (name and age) and display the values. Also print the version of R installation.
name = readline(prompt="What is your name: ")
age =  readline(prompt="What is your age: ")
print(paste("My name is",name, " I am",age ,"years old."))
print(R.version.string)

2. Write a R program to get the details of the objects in memory.
user_name <- "Felocxy"; 
print("Details of the objects in memory:")
print(ls.str())

3. Write a R program to create a sequence of numbers from 20 to 50 and find the mean of numbers from 20 to 60 and sum of numbers from 51 to 91.
print("sequence of numbers from 20 to 50: ")
print(seq(20,50))
print("find the mean of number from 20 to 60: ")
print(mean(20, 60))
print("sum of number from 51 to 91: ")
print(sum(51, 91))

4. Write a R program to create a vector which contains 10 random integer values between -50 and +50. 
   x2 <- function(N) {
  int.max <- 50
  int.min <- -50
  return(as.integer(runif(N, int.min, int.max)))
  }

5. Write a R program to get the first 10 Fibonacci numbers.
x <- numbers(10)
x[1] <- x[2] <- 1
for (i in 3:10) x[i] <- x[i - 2] + x[i - 1]
print("First 10 x numbers:")
print(x)

6. Write a R program to get all prime numbers up to a given number (based on the sieve of Eratosthenes).
prime_numbers <- function(n) {
  if (n >= 2) {
    x = seq(2, n)
    prime_nums = c()
    for (i in seq(2, n)) {
      if (any(x == i)) {
        prime_nums = c(prime_nums, i)
        x = c(x[(x %% i) != 0], i)
      }
    }

    return(prime_nums)
  }
  else 
  {
    stop("Input number should be at least 2.")
  }
} 
prime_numbers(16)


7. Write a R program to print the numbers from 1 to 100 and print "Fizz" for multiples of 3, print "Buzz" for multiples of 5, and print "FizzBuzz" for multiples of both.
for (i in 1:100) {
    if (i%%3 == 0 & i%%5 == 0) {print("FizzBuzz")}
    else if (i%%3 ==0){print("Fizz")}
    else if (i%%5 ==0){print("Buzz")}
    print(i)
  }

8. Write a R program to extract first 10 english letter in lower case and last 10 letters in upper case and extract letters between 22nd to 24th letters in upper case
print("First 10 letters in lower case:")
print("First 10 in lower case: ")
d = head(letters, 10)
print(d)
print("Last 10 in upper case: ")
e = tail(LETTERS, 10)
print(e)
print("Extract letters between 22nd to 24th letters in upper case: ")
f = tail(LETTERS[22:24])
print(f)

9. Write a R program to find the factors of a given number.
print_factors <- function(x) {
print(paste("The factors of",x,"are:"))
for(i in 1:x) {
if((x %% i) == 0) {
print(i)
}
}
}

10. Write a R program to find the maximum and the minimum value of a given vector.

a <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
print(a)
print(paste("The Maximum value is: ", max(a)))
print(paste("The Minimum value is: ", min(a)))


11. Write a R program to get the unique elements of a given string and unique numbers of vector. 
Hello <- ("Hello David, it feels goo knowing you are doing well")
print(Hello)
print(unique(toupper(Hello)))
or
vector <- c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 90, 80, 70, 60, 50, 40)
print(vector)
print(unique(vector))

"Hello" <- 
[1, 1, 2, 3] <-
["Hello", "Hello", "you"] <-


12. Write a R program to create three vectors a,b,c with 3 integers. Combine the three vectors to become a 3×3 matrix where each column represents a vector. Print the content of the matrix. 
a <- c(1,2,3)
b <- c(4,5,6)
c <- c(7,8,9)
d <- cbind(a,b,c)
print(d)

13. Write a R program to create a list of random numbers in normal distribution and count occurrences of each value.
f<- floor(rnorm(100, 5, 7))
print(f)
h <- print(table(f))
print(h)

14. Write a R program to read the .csv file and display the content. 
Med_disease_dataset_csv <- read_csv("C:/Users/owner/Desktop/Med_disease_dataset.csv.csv")
View(Med_disease_dataset_csv)

15. Write a R program to create three vectors numeric data, character data and logical data. Display the content of the vectors and their type. 
a<- c(1, 2, 3)
b<- c("oranges", "banana", "apple")
c <- c(TRUE, FALSE, FALSE, TRUE, TRUE)
typeof(a)
typeof(b)
typeof(c))

16. Write a R program to create a 5 x 4 matrix , 3 x 3 matrix with labels and fill the matrix by rows and 2 × 2 matrix with labels and fill the matrix by columns.
m1 = matrix(1:20, nrow=5, ncol=4)
print("5 × 4 matrix:")
print(m1)
cells = c(1,3,5,7,8,9,11,12,14)
rnames = c("Row1", "Row2", "Row3")
cnames = c("Col1", "Col2", "Col3")
m2 = matrix(cells, nrow=3, ncol=3, byrow=TRUE, dimnames=list(rnames, cnames))
print("3 × 3 matrix with labels, filled by rows: ")
print(m2)
print("3 × 3 matrix with labels, filled by columns: ")
m3 = matrix(cells, nrow=3, ncol=3, byrow=FALSE, dimnames=list(rnames, cnames))
print(m3)
 
17. Write a R program to create an array, passing in a vector of values and a vector of dimensions. Also provide names for each dimension. 
z =  array(
  6:30,
  dim = c(4, 3, 2),
  dimnames = list(
    c("Soccer", "Baseball", "Tennis", "Rugby"),
    c("Team1", "Team2", "Team3"),
    c("firsthalf", "secondhalf")
  )
)
print(z)

18. Write a R program to create an array with three columns, three rows, and two "tables", taking two  vectors as input to the array.  Print the array.
Table1 = c(1, 3, 5, 7)
Table2 = c(2, 4, 6, 8, 10)
score = array(c(Table1, Table2),dim = c(3,3,2))
print(score)
 
19. Write a R program to create a list of elements using vectors, matrices and a functions. Print the content of the list.
m = list(
  c(1, 2, 3, 4, 5, 6),  
  week.abb,
  matrix(c(2, 4, -2, -4, -1, 6), nrow = 3),
  asin
)
print(m)


20. Write a R program to draw an empty plot and an empty plot specify the axes limits of the graphic.  
#print("Empty plot:")
plot.new()
#print("Empty plot specify the axes limits of the graphic:")
plot(1, type="n", xlab="", ylab="", xlim=c(0, 10), ylim=c(0, 10))

21. Write a R program to create a simple bar plot of five subjects marks.
subject_marks = c(50, 85, 90, 64)
barplot(subject_marks,
        main = "Comparing marks of 5 subjects",
        xlab = "Marks",
        ylab = "Subject",
        names.arg = c("English", "Science", "Math.", "Hist."),
        col = "darkred",
        horiz = FALSE)
 
22. Write a R program to create  bell curve of a random normal distribution. 
n_axis = floor(rnorm(1000, 500, 100))
t_table = table(n)
barplot(t_table

23. Write a R program to compute sum, mean and product of a given vector elements. 
price_rice = c(5, 10, 20)
print(price_rice)   
print(paste("Sum of vector elements:",sum(price_rice)))
print(paste("Mean of vector elements:",mean(price_rice)))
print(paste("Product of vector elements:",prod(price_rice)))

24. Write a R program to create a list of heterogeneous data, which include character, numeric and logical vectors. Print the lists.
heter_list = list(Chr="Thompson", nums = 1:10, Male=FALSE)
print(heter_list)

25. Write a R program to create a Dataframes which contain details of 5 employees and display the details.
Employees = data.frame(Name=c("Josh","Eliot","Aisha", "Zach","Dongli"),
                       Gender=c("M","M","F","M","F"),
                       Age=c(31,25,28,25,29),
                       Designation=c("Trainee","Trainee","Trainer","Trainee","Trainer")
)
print(Employees)

26. Write a R program to create a Data Frames which contain details of 5 employees and display summary of the data.
Employees = data.frame(Name=c("Josh","Eliot","Aisha", "Zach","Dongli"),
                       Gender=c("M","M","F","M","F"),
                       Age=c(31,25,28,25,29),
                       Designation=c("Trainee","Trainee","Trainer","Trainee","Trainer")
)
print(summary(Employees))

27. Write a R program to create the system's idea of the current date with and without time.
print("System's idea of the current date with and without time:")
print(Sys.Date())
print(Sys.time())